# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_win64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -I../src -I../../src -I../../vendor -I../../vendor/glee -I../../vendor/glm -I../../vendor/lua-5.3.5/src -I../../vendor/SDL2-2.0.12/x86_64-w64-mingw32/include -I../../vendor/SDL2-2.0.12/x86_64-w64-mingw32/include/SDL2 -I../../vendor/soloud20200207/include -I../../vendor/tinyxml -I../../vendor/zlib-1.2.11
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -Wl,-Bstatic -lMustard-Debug -Wl,-Bdynamic -lmingw32 -lopengl32 -lSDL2main -lSDL2
LDDEPS +=
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_win64)
TARGETDIR = ../bin/Debug
TARGET = $(TARGETDIR)/MUSTARD_GAME.exe
OBJDIR = obj/win64/Debug
DEFINES += -DWIN32 -DWINDOWS_VERSION -DWITH_SDL2 -DLUA_COMPAT_ALL -DDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -Wno-pragmas -Wpsabi -msse2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=gnu++11 -Wno-pragmas -Wpsabi -msse2
ALL_LDFLAGS += $(LDFLAGS) -L/projects/Mustard/bin -L/projects/Mustard/vendor/SDL2-2.0.12/x86_64-w64-mingw32/lib -L../../vendor/SDL2-2.0.12/x86_64-w64-mingw32/lib/cmake -L../../vendor/SDL2-2.0.12/x86_64-w64-mingw32/lib/pkgconfig -L../../vendor/SDL2-2.0.12/x86_64-w64-mingw32/lib/cmake/SDL2 -L/usr/lib64 -m64

else ifeq ($(config),release_win64)
TARGETDIR = ../bin/Release
TARGET = $(TARGETDIR)/MUSTARD_GAME.exe
OBJDIR = obj/win64/Release
DEFINES += -DWIN32 -DWINDOWS_VERSION -DWITH_SDL2 -DLUA_COMPAT_ALL -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -Wno-pragmas -Wpsabi -msse2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=gnu++11 -Wno-pragmas -Wpsabi -msse2
ALL_LDFLAGS += $(LDFLAGS) -L/projects/Mustard/bin -L/projects/Mustard/vendor/SDL2-2.0.12/x86_64-w64-mingw32/lib -L../../vendor/SDL2-2.0.12/x86_64-w64-mingw32/lib/cmake -L../../vendor/SDL2-2.0.12/x86_64-w64-mingw32/lib/pkgconfig -L../../vendor/SDL2-2.0.12/x86_64-w64-mingw32/lib/cmake/SDL2 -L/usr/lib64 -m64 -mwindows -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/sampleProject.o
OBJECTS += $(OBJDIR)/sampleProject.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking SampleProject
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning SampleProject
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/sampleProject.o: ../src/sampleProject.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif